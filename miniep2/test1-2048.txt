6.1492078666667

30

6.328038
6.156276
5.857856
6.037537
5.916395
6.041173
6.066874
6.214384
6.238161
6.340761
5.981347
5.862582
5.873667
6.377552
6.038749
6.491467
6.864721
6.468267
6.108692
6.230077
6.171357
6.112604
6.163516
6.026814
6.136948
6.004065
6.133111
6.039673
6.103043
6.090529

https://www.quora.com/How-can-we-use-cache-s-for-optimization-of-matrix-multiplication

// for (kk = 0; kk < (n / s+1); ++kk)
    // {
    //     for (jj = 0; jj < (n / s+1); ++jj)
    //     {
    //         for (i = 0; i < n; ++i)
    //         {
    //             for (k = s * kk; k < (n > (s*(kk+1)) ? s*(kk+1) : n); ++k)
    //             {
    //                 double r = A(i, k);
    //                 for (j = s * jj; j < (n > (s*(jj+1)) ? s*(jj+1) : n); ++j)
    //                     C(i, j) += r * B(k, j);
    //             }
    //         }
    //     }
    // }